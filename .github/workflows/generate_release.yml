name: Generate_release_on_push_on_dev

on:
  pull_request:
    types:
      - closed
    branches:
      - dev
  workflow_dispatch:
    inputs:
      version_bump_type:
        description: "Version bump type (major, minor, patch)"
        required: false
        default: "patch"

jobs:
  update_version:
    if: ((github.event.pull_request.merged == true || github.event.pull_request.rebase == true ) && github.event.pull_request.base.ref == 'dev') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with: 
        submodules: 'true'
        token: ${{ secrets.GH_VERSIONING }}

    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Get PR description
      id: get_pr_description
      run: |
        echo "::set-output name=pr_description::$(jq -r '.pull_request.body' $GITHUB_EVENT_PATH)"
      shell: bash

    - name: Update version and CHANGELOG
      run: |
        PR_DESCRIPTION="${{ steps.get_pr_description.outputs.pr_description }}"
        # Convert empty string to null to prevent JSONDecodeError
        if [ -z "$PR_DESCRIPTION" ]; then
          PR_DESCRIPTION="null"
        fi
        python .github/workflows/scripts/update_version.py "${{ github.ref }}" "$PR_DESCRIPTION" "${{ github.event.inputs.version_bump_type }}"
      shell: bash

    - name: Set Version
      run: | 
        echo "BUILD_VERSION=$(python -c 'from version import VERSION; print(VERSION)')" >> $GITHUB_ENV
        
    - name: Commit and push changes
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add version.py CHANGELOG.md
        git commit -m "Update version to ${{ env.BUILD_VERSION }} and CHANGELOG"
        git push

    - name: Create folder to copy the files
      run: |
        mkdir -p meticulous-backend

    - name: Copy files, excep the unneeded folders using exclude 
      run: |
        rsync -avq --exclude='meticulous-backend' --exclude='dist' --exclude='.github' --exclude='.git' ./ meticulous-backend

    - uses: montudor/action-zip@v1
      name: Preparing ZIP
      with:
        args: zip -qq -r meticulous-backend.zip meticulous-backend

    - name: Release
      env:
        GITHUB_TOKEN: "${{ secrets.G_CLONE_TOKEN }}"
      run: |
        gh release create backend_for_esp32-${{ env.BUILD_VERSION }} meticulous-backend.zip -R https://github.com/FFFuego/Meticulous-Releases
        echo "Release created, And version updated to ${{ env.BUILD_VERSION }}"